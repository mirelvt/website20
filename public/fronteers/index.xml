<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fronteers on Mirella van Teulingen</title>
    <link>http://localhost:1313/fronteers/</link>
    <description>Recent content in Fronteers on Mirella van Teulingen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Oct 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/fronteers/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fronteers Conference 2014</title>
      <link>http://localhost:1313/fronteers/conf_2014/</link>
      <pubDate>Wed, 15 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fronteers/conf_2014/</guid>
      <description>&lt;article role=&#34;article&#34;&gt;
    &lt;h1&gt;Fronteers Conference 2014&lt;/h1&gt;
    &lt;p&gt;
        15-10-2014
        &lt;br&gt;
        On 9 and 10 october was the big event. Two days of inspiring talks and where you meet old friends and make new ones. This article gives a summary of most of the talks. The master of ceremony for this conference was &lt;a href=&#34;http://jakearchibald.com/&#34;&gt;Jake Archibald&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;Day 1&lt;/h2&gt;&lt;p&gt;The first day Heydon Pickering &lt;a href=&#34;https://www.twitter.com/heydonworks&#34;&gt;@heydonworks&lt;/a&gt; talked about best practises on developing with html and CSS. It is all about semantics, it is more readable, understandable and maintainable. For example use &lt;em&gt;[role=&#34;tab&#34;][aria-selected=&#34;true&#34;]&lt;/em&gt; instead of .tab-active. He mentioned that the difference in performance is extremely minimal whether using attributes or class names.&lt;/p&gt;&lt;p&gt;Daniel Espeset &lt;a href=&#34;https://www.twitter.com/danielespeset&#34;&gt;@danielespeset&lt;/a&gt; gave a peak in how they set up their infrastructure for front end development at Etsy.&lt;/p&gt;&lt;p&gt;Arnout Kazemier&#39;s talk was about pushing the realtime web forward. He discussed the pro&#39;s and cons of the latest technology to use for realtime web. For example, Websockets, it is supported in IE10 Firefox 31, Chrome 37 safari 7.1, iOS Safari 8 and Android 4.4 and has a simple and understandable API. But at this time of writing it has also some serious bugs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Writing to a closed websocket connection can crash your phone. You have to add some latency to avoid crashing browsers.&lt;/li&gt;&lt;li&gt;Pressing esc in Firefox closes the connection. (fixed in FF20)&lt;/li&gt;&lt;li&gt;Firefox can create ghost connections.&lt;/li&gt;&lt;li&gt;4G, 3G and slower do not suppport Websockets. Fallback is to filter out the mobiles.&lt;/li&gt;&lt;li&gt;Virus scanners, extensions, the user and network server firewalls can block Websockets&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;At this stage the newest technology is not really useful in production environment. It is something to keep an eye on, one day we can use the realtime web.&lt;/p&gt;&lt;p&gt;Rachel Nabors &lt;a href=&#34;https://www.twitter.com/rachelnabors&#34;&gt;@rachelnabors&lt;/a&gt; gave a visually beautiful styled presentation about the state of web animation. Animation improves adoption rate of new interfaces, change can be more easily comprehended when itâ€™s gradual, especially for the young and elderly. You have 3 kinds of animations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static animation: start --&amp;gt; finish&lt;/li&gt;&lt;li&gt;Stateful animations: default state --&amp;gt; event --&amp;gt; predefined state&lt;/li&gt;&lt;li&gt;Dynamic animations: current state: 1. factores + event + factors: 1a new state, 1b new state&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Interesting animation libraries to check out: &lt;a href=&#34;http://greensock.com/gsap&#34;&gt;Greensock animation platform&lt;/a&gt; and &lt;a href=&#34;http://julian.com/research/velocity/&#34;&gt;Velocityjs&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img src=&#34;../img/rachel-nabors-fronteers-2014.jpg&#34; alt=&#34;Rachel Nabors - The State of Web Animation&#34;&gt;&lt;/figure&gt;&lt;p&gt;The mini sessions gave us a glance in game development for the web. There are hundreds of frameworks available, Thomas Palef recommended &lt;a href=&#34;http://phaser.io/&#34;&gt;Phaser&lt;/a&gt;, a free open source HTML5 framework. If you want to get started with game development he advices to start making a really tiny game like ping, space invader or breakout. Once you have the hang of it, start creating another one with a little more complexity, and so on. Until you ar ready to create a real game you might think people want to play.&lt;/p&gt;&lt;h2&gt;Day 2&lt;/h2&gt;&lt;p&gt;Day two started with Nicholas Gallagher &lt;a href=&#34;https://www.twitter.com/necoloas&#34;&gt;@necolas&lt;/a&gt; talking about making the Twitter UI infrastructure. The ui is split up in ui-components like: ui-icon, ui-ProductPage etc. Each component has its own file infrastructure and contains only the code necessary for the component, including tests. For the worksflow they created automatic tasks to test and run the new change: make install, build, test etc. They design for adaptability and define components as the unit of scale.&lt;/p&gt;&lt;p&gt;Dave Olsen shared his experience with optimizing web performance. (Check out slidesearch for the &lt;a href=&#34;http://www.slidesearch.org/slide/optimizing-web-performance-fronteers-edition&#34;&gt;slides&lt;/a&gt;). Do you know that 1.8mb is the average weight of a web page today? 78% are images and javascript. RDW sites whose small screen design weighs the same as the large screen design? And 71% of the users expect your mobile site to load as quickly as your desktop site.&lt;/p&gt;&lt;blockquote&gt;Mobile first means performance first &lt;cite&gt;- Dave Olsen&lt;/cite&gt;&lt;/blockquote&gt;&lt;p&gt;You can diagnose web performance issues with pagespeed insights of Google, Chrome dev tools and &lt;a href=&#34;webpagetest.org&#34;&gt;webpagetest.org&lt;/a&gt;. To optimize for mobile you can reduce asset size, reduce requests and speed up page-render. Try &lt;a href=&#34;redbot.org&#34;&gt;redbot.org&lt;/a&gt; to see if you&#39;re caching. Web performance for javascript:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Avoid using bulky frameworks try microjs.com to find libraries that may be smaller. Javascript also blocks the rendering of the page.&lt;/li&gt;&lt;li&gt;Avoid DOM reflows &amp;amp; repaints. they slow down page render time as well as burn battery.&lt;/li&gt;&lt;li&gt;Use &lt;a href=&#34;http://benhowdle.im/touche/&#34;&gt;touch&lt;/a&gt; or &lt;a href=&#34;https://github.com/ftlabs/fastclick&#34;&gt;fastclick&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Use CDNs to serve common js libraries to help reduce RTT for requests.&lt;/li&gt;&lt;li&gt;Use service like &lt;a href=&#34;https://www.npmjs.org/package/grunt-penthouse&#34;&gt;penthouse&lt;/a&gt; to find critical CSS.&lt;/li&gt;&lt;li&gt;Also focus on getting a fast initial render.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://perf-tooling.today/&#34;&gt;perf-tooling.today&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://yahoo.github.io/boomerang/doc/&#34;&gt;yahoo.github.io/boomerang/doc/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Sara Soueidan &lt;a href=&#34;https://www.twitter.com/sarasoeidon&#34;&gt;@sarasoeidon&lt;/a&gt; gave us a rollercoaster ride through animating SVGs with CSS and HTML. It was a great talk with lot of examples. Things to know about using svg:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CSS animations only work inside the svg, when using an img, object, embed, iframe tag, or embedded in CSS as background, but CSS interactions won&#39;t.&lt;/li&gt;&lt;li&gt;When you use inline svg both CSS animations and CSS interactions will work.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://www.w3.org/TR/SVG2/&#34;&gt;SVG2&lt;/a&gt; will contain more attributes which we can use in CSS.&lt;/li&gt;&lt;li&gt;With &lt;a href=&#34;http://www.w3.org/TR/SMIL/&#34;&gt;SMIL&lt;/a&gt; you can e.g. animate attributes and do event handling. At this time of writing SMIL does not work in IE and Opera Mini.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;Hell, is not understanding my own code &lt;cite&gt;- Kyle Simpson&lt;/cite&gt;&lt;/blockquote&gt;&lt;p&gt;Everyone at the conference has written code that worked without knowing why. First learn the language in depth and you also need better tools. Kyle Simpson &lt;a href=&#34;https://www.twitter.com/getify&#34;&gt;@getify&lt;/a&gt; gave us a list of handy tools to make your live as JS developer easier. He is working on a &lt;a href=&#34;github.com/getify/esre&#34;&gt;configurable two way formatting tool&lt;/a&gt; to end the discussion of whether or not using semi colons, whitespace vs tabs. Pick the tools that suits you, but be aware there is no such thing as a holy grail for the right toolset. The tools he recommended are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://sweetjs.org&#34;&gt;sweetjs.org&lt;/a&gt; provides macros to javascript developers. Currently being adopted by the Mozilla Foundation.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://esprima.org/test/compare.html&#34;&gt;esprima/acorn&lt;/a&gt; (parser)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/estools/escodegen&#34;&gt;escodegen&lt;/a&gt; (code generator)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/estools/escope&#34;&gt;escope/eslevels&lt;/a&gt; (scope analyzer)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://gotwarlost.github.io/istanbul/&#34;&gt;istanbul&lt;/a&gt; (code coverage)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/estools/estraverse&#34;&gt;estraverse&lt;/a&gt; (analyze AST)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://eslint.org/&#34;&gt;eslint&lt;/a&gt; (pluggable code linting rules)&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://jscomplexity.org/complexity&#34;&gt;jscomplexity.org&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Petro Salema closed the conference with an inspiring talk, named &#34;Dream big, think small&#34;.&lt;/p&gt;&lt;/article&gt;
</description>
    </item>
    
    <item>
      <title>Accessibility is also UX design</title>
      <link>http://localhost:1313/fronteers/accessibility-is-ux-design/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fronteers/accessibility-is-ux-design/</guid>
      <description>&lt;article role=&#34;article&#34; class=&#34;column-content&#34;&gt;&lt;h1&gt;Accessibility is also UX design&lt;/h1&gt;&lt;p class=&#34;subtitle&#34;&gt;UX candy - Johan Huijkman Twitter: @huijkman - Arend van Baarsen&lt;/p&gt;&lt;p&gt;08-01-2013 &lt;br&gt;The presentation was held at &lt;a href=&#34;http://www.q42.nl&#34;&gt;Q42&lt;/a&gt; in The Hague. A nice environment to work and to share knowledge. Johan and Arend went through some sites using the screen reader and showed us some examples how people with visual impairment are experiencing websites. You can test this as well with &lt;a href=&#34;http://www.webformator.de/hollaendisch/index.php&#34;&gt;webformator&lt;/a&gt; for Windows or the Voice over application on the Mac OS.&lt;/p&gt;&lt;p&gt;He also showed google.nl as an example of a really bad accessibility experience. Even the Dutch news site nu.nl is not user friendly. It goes through all the links in the top, banners and links in the left navigation, before it finally starts reading the first news headline. We laughed about it during the presentation but it is quite sad, actually.&lt;/p&gt;&lt;p&gt;As humans we scan the headlines to see what article gets our interest to read. People who needs a screen reader are forced to scan the site lineair.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Missasumption #1: The site should be accessible when javascript is off.&lt;/strong&gt;&lt;br&gt;It should also be accessible when javascript is on! One of the things that I didn&#39;t know is that screen readers read javascript. When you have a carrousel on your site it will read this code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Missasumption #2: Only a few cannot access your site, so why bother?&lt;/strong&gt;&lt;br&gt;In the Netherlands there are about 4 million users with a form of a disability! You cannot ignore them.&lt;/p&gt;&lt;h2&gt;What can you do to make sites more accessible?&lt;/h2&gt;&lt;p&gt;There are a number of ways to make your site accessible for the users. The easiest way to tackle some problems is using the following tips:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Use a &#34;skip&#34; link, this is the safest way because &lt;a href=&#34;http://www.w3.org/WAI/intro/aria.php&#34;&gt;WAI-ARIA&lt;/a&gt; standard is not completely accepted.&lt;/li&gt;&lt;li&gt;Add help text before the link, for example: &#34;Go directly to...&#34;. It will make it more clear for the user.&lt;/li&gt;&lt;li&gt;Structure your HTML to place the important part (content) in the top section.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Another thing Johan pointed out is that title tags are &lt;a href=&#34;http://www.w3.org/html/wg/wiki/ChangeProposals/notitlev2#New_information:_Browser_vendors_have_not_made_a_commitment_to_provide_.28input.29_device_independent_access_to_title_attribute_content&#34;&gt;not well supported by browsers&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;It is not just about clean HTML code, it&#39;s about interaction&lt;/h2&gt;&lt;p&gt;Johan gave us 2 more examples to be aware of during development.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;How does someone with a screen reader experience your site? How does this person knows when something on the page has changed?&lt;/strong&gt;&lt;br&gt;Example filling in web forms. When the user makes a mistake in a form, don&#39;t reload the page and loose what was filled in correctly. There are people who have trouble typing. Also place the error message outside and in the top of the form with a link to the field which must be corrected. If the error is in the input field/form it will be ignored by the screen reader.&lt;/p&gt;&lt;p&gt;Another issue is using captcha. Arend let us listen to a captcha example. The screen reader talks jibberish when reading the captcha text. You cannot make any sense of it.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What about people who has a visual impairment?&lt;/strong&gt;&lt;br&gt;There are people who have to zoom in so badly they only see a part of the site. For example the homepage of the Dutch public transport planner. People who zoom in might try to type in the fields, while this is really just an image, not the form.&lt;/p&gt;&lt;p&gt;And think of people who cannot drag,drop, pinch or zoom. How can you give them a better experience?&lt;/p&gt;&lt;h2&gt;Accessibility label is not the holy grail&lt;/h2&gt;&lt;p&gt;There are a number of accessibility labels in the Netherlands you can achieve for your site: &lt;a href=&#34;http://www.drempelvrij.nl&#34;&gt;drempelvrij.nl&lt;/a&gt;, &lt;a href=&#34;http://accessibility.nl&#34;&gt;accessibility.nl&lt;/a&gt;. When you&#39;re able to get one of these labels, it doesn&#39;t mean that your site is full proof accessible. Q42 created the website for the Dutch public transport travel planner. They made a new version of the travel planner which was still using a table. It was OK, at least good enough to get the accessibility label. But Q42 decided to hire people from &lt;a href=&#34;http://visiris.com&#34;&gt;visiris.com&lt;/a&gt; to test the site. And it turns out that it was not working as it should. They changed the form using spans and divs and it worked like a charm. Johan used the screan reader for the audience to hear the difference between the 2 versions. The final travel planner made much more sense and more useful.&lt;/p&gt;&lt;p&gt;An accessibility label is, what I think a very good start to make your site more accessible, but as Johan pointed out, don&#39;t stare blindly on this label, also ask &lt;em&gt;real&lt;/em&gt; users to test your site.&lt;/p&gt;&lt;h2&gt;Tips for development&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;Think content first (or mobile first). You will avoid a lot of accessibility issues.&lt;/li&gt;&lt;li&gt;Use your common sense.&lt;/li&gt;&lt;li&gt;Use a screen reader to test your site.&lt;/li&gt;&lt;li&gt;Navigate with your keyboard.&lt;/li&gt;&lt;li&gt;If you are a developer, talk to the UX designer and vice versa.&lt;/li&gt;&lt;li&gt;Try the Dutch &lt;a href=&#34;http://www.frankwatching.com/gespot/bartimeus-zien-app-laat-zien-wat-een-slechtziende-ziet/&#34; class=&#34;external-link&#34;&gt;&#34;ZIEN&#34; app&lt;/a&gt; for iPhone or iPad to experience what it&#39;s like when you have a visual impairment.&lt;/li&gt;&lt;li&gt;Q42 created a Chrome extension &lt;a href=&#34;https://chrome.google.com/webstore/search-extensions/see?hl=nl&#34;&gt;&#34;See&#34;&lt;/a&gt;. It lets you view the web as a user with a visual impairment.&lt;/li&gt;&lt;li&gt;In the Netherlands there are about 4 million users with a form of a disability. You can ask them to test your site or hire someone from: &lt;a href=&#34;http://www.viziris.nl&#34;&gt;Viziris.com&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To be frank, I personally didn&#39;t think much about accessibility. At least not enough. After the presentation about &lt;a href=&#34;../fronteers2012/accessibility&#34;&gt;accessibility&lt;/a&gt; on the Fronteers conference 2012, I did make a start. Every site I start to build (including my own site), I think about the structure first and use my keyboard once in a while for testing. But after this presentation I realized there is a lot more to it than just restructuring the HTML. It is, as Johan stated: &#34;Accessibility is also UX design&#34;.&lt;/p&gt;&lt;/article&gt;
</description>
    </item>
    
    <item>
      <title>The zoom interface of www.rijksmuseum.nl</title>
      <link>http://localhost:1313/fronteers/rijksmuseum/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fronteers/rijksmuseum/</guid>
      <description>&lt;article role=&#34;article&#34;&gt;&lt;h1&gt;The zoom interface of www.rijksmuseum.nl&lt;/h1&gt;&lt;p class=&#34;subtitle&#34;&gt;Remco Veldkamp - Twitter: @remcoder&lt;/p&gt;&lt;p&gt;08-01-2013 &lt;br&gt;All 135.000 images of the collection of National Museum Amsterdam are to be admired in ultra high resolution and full screen on every smartphone, tablet and personal computer. Remco talked about the challenges he encountered and how close you can zoom in on a painting.&lt;/p&gt;&lt;h2&gt;Creating tiles&lt;/h2&gt;&lt;p&gt;For the small screen resolutions they created tiles of the paintings. The database contains 125.000 images with a total of 690GB! That&#39;s a lot. To make programming easier, they created the product WorkQueue. With this product they can easily create tiles. For every zoom level there is a scaled version of the tile. To experience the site, it is advised to have wi-fi connection, because of the image data that needs to be downloaded.&lt;/p&gt;&lt;h2&gt;Leaflet for zooming&lt;/h2&gt;&lt;p&gt;For the zoom mechanism Q42 uses &lt;a href=&#34;http://leafletjs.com/&#34;&gt;Leaflet&lt;/a&gt;. This is an open source javascript library for mobile-friendly interactive maps. And it works on iOS and Android. Other mechanisms they use for the zoom magic is CSS transitions and transforms, overlays and markers.&lt;/p&gt;&lt;p&gt;Leaflet works with longitude and latitude coordinates. That doesn&#39;t really make sense for paintings. Remco made some tweaks in the library to be able to work with x and y coordinates. They also had a projection problem. Maps are globe like, for the paintings they needed a square projection.&lt;/p&gt;&lt;h2&gt;Overall impression&lt;/h2&gt;&lt;p&gt;It is very impressive how Q42 managed to build such a user experience. The website has more to offer than zooming on paintings. You can download a painting to the online studio, where you can create snippets from the details of paintings you like most, create posters, post cards etc. It is really a fun and interesting way to experience our &lt;a href=&#34;http://www.rijksmuseum.nl&#34;&gt;National Museum&lt;/a&gt;.&lt;/p&gt;&lt;/article&gt;
</description>
    </item>
    
    <item>
      <title>There&#39;s a class for that</title>
      <link>http://localhost:1313/fronteers/oocss/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fronteers/oocss/</guid>
      <description>&lt;article role=&#34;article&#34;&gt;&lt;h1&gt;There&#39;s a class for that&lt;/h1&gt;&lt;p class=&#34;subtitle&#34;&gt;Elaine Oliver Twitter: @skinkfu&lt;/p&gt;&lt;p&gt;08-01-2013 &lt;br&gt;The presentation was held at &lt;a href=&#34;http://www.q42.nl/&#34;&gt;Q42&lt;/a&gt; in The Hague. Elaine Oliver is an interaction engineer and front end developer. She was part of the project team that created the new website of the &lt;a href=&#34;http://www.rijksmuseum.nl&#34;&gt;Dutch National Museum&lt;/a&gt;. In this presentation she shared her experience about creating the OOCSS architecture, responsive design and CSS unit tests.&lt;/p&gt;&lt;p&gt;If you are not familiar with OOCSS or want to know more about it, I recommend you to read the article &lt;a href=&#34;http://coding.smashingmagazine.com/2011/12/12/an-introduction-to-object-oriented-css-oocss/&#34;&gt;&#34;An Introduction to Object Oriented CSS&#34;&lt;/a&gt; from Louis Lazaris on Smashing magazine website. Another recommendation is &lt;a href=&#34;http://smacss.com/&#34;&gt;SMACSS&lt;/a&gt;, a style guide to structure your CSS to allow flexibility and maintainability.&lt;/p&gt;&lt;p&gt;Elaine explains that the new site of the Dutch National Museum must be accessible on different devices, browsers and Internet Explorer 8. There was a lot of pressure to make the site pixel perfect, because there were a number of art designers responsible for the design. Plus they were not familiar with designing for flexible screens. During the project the developers came with new ideas and solutions for the site architecture.&lt;/p&gt;&lt;p&gt;Elaine&#39;s goal was to make a flexible and powerful CSS framework, which can be easily used. For example, if another colleague or front end developer wants to make the search function responsive, how cool would it be if you can say: &#34;There&#39;s a class for that.&#34;? To reach this goal, she decided to do it with OOCSS.&lt;/p&gt;&lt;h2&gt;Basics of OOCSS&lt;/h2&gt;&lt;p&gt;Elaine gave the following tips to make your CSS object oriented:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The styles should be content and context independent.&lt;/li&gt;&lt;li&gt;Define one class that has a number of styles, instead of using multiple selectors.&lt;/li&gt;&lt;li&gt;Define good names for the classes and their fuction.&lt;/li&gt;&lt;li&gt;Think in small blocks and give it good and clear names.&lt;/li&gt;&lt;li&gt;Keep it simple where possible.&lt;/li&gt;&lt;li&gt;Keep your target group in mind: people who will use your framework.&lt;/li&gt;&lt;li&gt;Use &#34;js&#34; prefixes or data-role for javascript related CSS.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Can you develop responsive OOCSS?&lt;/strong&gt;&lt;br&gt;Yes you can. Elaine&#39;s tip is to activate a media query based on a class.&lt;/p&gt;&lt;h2&gt;CSS Unit tests&lt;/h2&gt;&lt;p&gt;Elaine was so excited and proud with what she had accomplished, but her colleagues din&#39;t understand the code. To make it easier to read and to use, she decided to create CSS unit tests. She created online documentation of every class with an example of what it does. This kind of documentation is usefull:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;to prevent regression&lt;/li&gt;&lt;li&gt;for documenting styles&lt;/li&gt;&lt;li&gt;to have better communication with colleagues&lt;/li&gt;&lt;li&gt;for prototyping&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For creating unit tests Elaine used &lt;a href=&#34;http://weblogs.asp.net/scottgu/archive/2010/07/02/introducing-razor.aspx&#34;&gt;Razor templates&lt;/a&gt;, that worked best for her.&lt;/p&gt;&lt;h2&gt;Overall impression&lt;/h2&gt;&lt;p&gt;I noticed she used a huge amount of classes just for simple things as margin:0 auto etc. Some HTML elements had about 8 or 10 classes. I wonder if it would make your life as front end developer easier if an element has so many classes? Isn&#39;t it hard to maintain?&lt;/p&gt;&lt;p&gt;Besides my personal remarks, I really liked the presentation and the experience Elaine had shared with us. It gave me food for thought and ideas how to make my CSS more object oriented. I do was impressed how flexible the framework is that Elaine created, and her unit tests as well. That had cost her an incredibly amount of time and efford.&lt;/p&gt;&lt;/article&gt;
</description>
    </item>
    
    <item>
      <title>Fronteers Conference 2012</title>
      <link>http://localhost:1313/fronteers/conf_2012/</link>
      <pubDate>Sun, 21 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fronteers/conf_2012/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>