@import "_mixins";

* { box-sizing: border-box; }

// * 1: Computes to 10px by the browsers so we can use rem the nice way
// * 2: Specifies a size adjustment for displaying text content on smartphones.
// * 3: Improve text-rendering in Webkit browsers and firefox on OSX.
// * 4: Set the kerning and ligatures for current and future browsers.
//      Smashing Booke #4 Chapter 9.

:root {
    height: 100%;
    font-size: 62.5%; // * 1 *
    @include text-adjust; // * 2 *
    @include font-smoothing; // * 3 *
    @include font-kerning; // * 4 *
    @include font-feature-settings; // * 4 *
    color: $c-text;
}

body {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: $font-main;
    font-size: 1.8rem;
    line-height: 2.2rem;
    background-color: #f2f4f3;
}

a {
    @include transition(color 0.25s);
    color: $c-main;

    &:hover { color: $c-hover; }

    h2 &,
    h3 &,
    h4 &,
    h5 &,
    h6 & { text-decoration: none; }
}

p {
    margin-top: 0;
    margin-bottom: 1.8rem;
}

blockquote {
    position: relative;
    margin-left: 0;
    padding-left: 3.5rem;
    font: {
        weight: normal;
        style: italic;
        size: 111%;
        weight: bold;
    }

    &::before {
        position: absolute;
        top: 12px;
        left: 0;
        font-size: 333.33%;
        content: "\2018";
        color: $c-main;
    }
}

cite {
    display: block;
    font-size: 90%;
    font-style: normal;
    font-weight: normal;
}

%generic-h {
    margin-top: 0;
    font-family: $font-headers;
    font-weight: normal;
    color: $c-main;
    line-height: 100%;
}

// Generate headings using vw. In the breakpoint section
// the rem units are defined.
@for $i from 1 through 6 {
    h#{$i} {
        @extend %generic-h;

        @if ($i == 1) {
            font-size: 5vw;
        } @else {
            font-size: 5vw - ($i / 2);
        }
    }
}

h1,
h2 { margin-bottom: 1.5rem; }

h3,
h4,
h5,
h6 { margin-bottom: 0; }

.visualwrapper {
    width: 100%;
    max-width: 1200px;
    min-height: 100%;
    margin: 0 auto;
    background-color: #fff;
}

figure {
    margin: 0;
    text-align: center;

    img {
        display: inline-block;
        border: 10px solid #fff;
        box-shadow: 0 0 8px 0 rgba($c-text, 0.6);
        max-width: 100%;
    }

    figcaption {
        margin-top: 0.5rem;
        font-style: italic;
        font-size: 83.33%;
        color: lighten($c-text, 30%);
    }

    + p { margin-top: 2rem; }
}

// next + prev arrows
.nav-arrows {
    width: 100px;
    margin: 0 auto 30px;

    // arrow links
    a {
        display: inline-block;
        border-style: solid;
        @include transition(border-color 0.25s);
    }
}

// Style the prev + left arrow including hover
.arrow- {
    &prev {
        margin-right: 20px;
        border-width: 15px 20px 15px 0;
        border-color: transparent $c-main transparent transparent;

        &:hover {
            border-color: transparent $c-hover transparent transparent;
        }
    }

    &next {
        border-width: 15px 0 15px 20px;
        border-color: transparent transparent transparent $c-main;

        &:hover {
            border-color: transparent transparent transparent $c-hover;
        }
    }
}

// ===========
// BREAKPOINTS
// -----------
@include mq-max(517px) {
    .visualwrapper { padding: 100px 30px 10px; }
}

@include mq-min(517px) {
    .visualwrapper {
        padding: 36px 30px;
        box-shadow: 0 0 4px 0 rgba(#000, 0.25);
    }
}

@include mq-max(600px) {
    @for $i from 1 through 6 {
        h#{$i} {
            @if ($i == 1) {
                font-size: 3.6rem;
            } @else {
                font-size: 3.2rem - (3 * $i / 10);
            }
        }
    }
}

@include mq-min(900px) {
    @for $i from 1 through 6 {
        h#{$i} {
            @if ($i == 1) {
                font-size: 4.6rem;
            } @else {
                font-size: 3.8rem - (3 * $i / 10);
            }
        }
    }
}

// @End breakpoints
// ----------------

@import "_fonts";
